/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainWindow;

import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;

/**
 *
 * @author Timothy
 */
public class Main extends javax.swing.JFrame {

    private final ArrayList<JCheckBox> typeFilterCheckBoxes;
    private final ArrayList<JCheckBox> regionFilterCheckBoxes;
    private final ArrayList<JCheckBox> statusFilterCheckBoxes;
    private final ArrayList<JCheckBox> markSelectedCheckBoxes;
    private final PokeList pokeList;

    /**
     * Creates new form Main
     */
    public Main() {
        this.pokeList = new PokeList();
        this.typeFilterCheckBoxes = new ArrayList<>();
        this.regionFilterCheckBoxes = new ArrayList<>();
        this.statusFilterCheckBoxes = new ArrayList<>();
        this.markSelectedCheckBoxes = new ArrayList<>();
        
        initComponents();
        
        swapTypeFiltersToArrayList(typeFilterGroup, typeFilterCheckBoxes);
        swapTypeFiltersToArrayList(regionFilterGroup, regionFilterCheckBoxes);
        swapTypeFiltersToArrayList(statusFilterGroup, statusFilterCheckBoxes);
        swapTypeFiltersToArrayList(markSelectedGroup, markSelectedCheckBoxes);
    }

    private void swapTypeFiltersToArrayList(ButtonGroup filterGroup, ArrayList<JCheckBox> filterCheckBoxes) {
        Enumeration<AbstractButton> elements = filterGroup.getElements();
        while (elements.hasMoreElements()) {
            JCheckBox element = (JCheckBox) elements.nextElement();
            filterCheckBoxes.add(element);
        }
        for (JCheckBox element : filterCheckBoxes) {
            filterGroup.remove(element);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewSwitchGroup = new javax.swing.ButtonGroup();
        typeFilterGroup = new javax.swing.ButtonGroup();
        regionFilterGroup = new javax.swing.ButtonGroup();
        statusFilterGroup = new javax.swing.ButtonGroup();
        markSelectedGroup = new javax.swing.ButtonGroup();
        logoPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        iconLabel = new javax.swing.JLabel();
        sourceLink = new javax.swing.JLabel();
        copyrightLabel = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        pkmnViewPanel = new javax.swing.JPanel();
        pkmnViewLabel = new javax.swing.JLabel();
        commandPanel = new javax.swing.JSplitPane();
        filterPanel = new javax.swing.JTabbedPane();
        typeFilterPanel = new javax.swing.JPanel();
        typeFiltersPanel = new javax.swing.JPanel();
        normalFilterCheckBox = new javax.swing.JCheckBox();
        fireFilterCheckBox = new javax.swing.JCheckBox();
        groundFilterCheckBox = new javax.swing.JCheckBox();
        psychicFilterCheckBox = new javax.swing.JCheckBox();
        fightingFilterCheckBox = new javax.swing.JCheckBox();
        waterFilterCheckBox = new javax.swing.JCheckBox();
        rockFilterCheckBox = new javax.swing.JCheckBox();
        iceFilterCheckBox = new javax.swing.JCheckBox();
        flyingFilterCheckBox = new javax.swing.JCheckBox();
        grassFilterCheckBox = new javax.swing.JCheckBox();
        bugFilterCheckBox = new javax.swing.JCheckBox();
        dragonFilterCheckBox = new javax.swing.JCheckBox();
        poisonFilterCheckBox = new javax.swing.JCheckBox();
        electricFilterCheckBox = new javax.swing.JCheckBox();
        ghostFilterCheckBox = new javax.swing.JCheckBox();
        darkFilterCheckBox = new javax.swing.JCheckBox();
        steelFilterCheckBox = new javax.swing.JCheckBox();
        fairyFilterCheckBox = new javax.swing.JCheckBox();
        allTypeFiltersButton = new javax.swing.JButton();
        noTypeFiltersButton = new javax.swing.JButton();
        typeSwitchesPanel = new javax.swing.JPanel();
        typeStrictMatchButton = new javax.swing.JToggleButton();
        singleTypeOnlyButton = new javax.swing.JToggleButton();
        dualTypeOnlyButton = new javax.swing.JToggleButton();
        regionFilterPanel = new javax.swing.JPanel();
        regionFiltersPanel = new javax.swing.JPanel();
        kantoRegionFilterCheckBox = new javax.swing.JCheckBox();
        johtoRegionFilterCheckBox = new javax.swing.JCheckBox();
        hoennRegionFilterCheckBox = new javax.swing.JCheckBox();
        sinnohRegionFilterCheckBox = new javax.swing.JCheckBox();
        unovaRegionFilterCheckBox = new javax.swing.JCheckBox();
        kalosRegionFilterCheckBox = new javax.swing.JCheckBox();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel12 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel13 = new javax.swing.JLabel();
        allRegionFiltersButton = new javax.swing.JButton();
        noRegionFiltersButton = new javax.swing.JButton();
        regionButtonsPanel = new javax.swing.JPanel();
        regionStrictMatchButton = new javax.swing.JToggleButton();
        javax.swing.JLabel jLabel14 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel15 = new javax.swing.JLabel();
        collectionFilterPanel = new javax.swing.JPanel();
        collectionFiltersPanel = new javax.swing.JPanel();
        caughtStatusFilterCheckBox = new javax.swing.JCheckBox();
        wantStatusFilterCheckBox = new javax.swing.JCheckBox();
        seenStatusFilterCheckBox = new javax.swing.JCheckBox();
        tradedStatusFilterCheckBox = new javax.swing.JCheckBox();
        multipleStatusFilterCheckBox = new javax.swing.JCheckBox();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel16 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel17 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel18 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel19 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel20 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel21 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel22 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel23 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel24 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel25 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel26 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel29 = new javax.swing.JLabel();
        allStatusFiltersButton = new javax.swing.JButton();
        noStatusFiltersButton = new javax.swing.JButton();
        collectionButtonsPanel = new javax.swing.JPanel();
        regionStrictMatchButton1 = new javax.swing.JToggleButton();
        javax.swing.JLabel jLabel27 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel28 = new javax.swing.JLabel();
        markSelectedPane = new javax.swing.JTabbedPane();
        markSelectedPanel = new javax.swing.JPanel();
        markSelectedsPanel = new javax.swing.JPanel();
        markCaughtCheckBox = new javax.swing.JCheckBox();
        markCaughtButton = new javax.swing.JButton();
        markSeenCheckBox = new javax.swing.JCheckBox();
        markSeenButton = new javax.swing.JButton();
        markWantCheckBox = new javax.swing.JCheckBox();
        markWantButton = new javax.swing.JButton();
        markTradedCheckBox = new javax.swing.JCheckBox();
        markTradedButton = new javax.swing.JButton();
        markMultipleField = new javax.swing.JTextField();
        markMultipleButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel30 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel31 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel32 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel38 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel37 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel36 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel35 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel34 = new javax.swing.JLabel();
        clearMarkButton = new javax.swing.JButton();
        allMarkButton = new javax.swing.JButton();
        markSwitchesPanel = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        controlPanel = new javax.swing.JPanel();
        searchbynameLabel = new javax.swing.JLabel();
        searchByNameField = new javax.swing.JTextField();
        viewSwitchLabel = new javax.swing.JLabel();
        viewByPanel = new javax.swing.JPanel();
        allPokemonRadio = new javax.swing.JRadioButton();
        evolutionFamilyRadio = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        tablePane = new javax.swing.JScrollPane();
        pokemonListTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PokéDox");
        setIconImage(new ImageIcon(getClass().getResource("PokeBall_icon_mini.png")).getImage());

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setText("PokéDox");

        iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainWindow/Pokeball_icon.png"))); // NOI18N

        sourceLink.setText("On GitHub");
        sourceLink.setToolTipText("https://github.com/lukexorz/PokeDox");

        copyrightLabel.setText("Copyright 2015-2016 by Luke Stanley");

        javax.swing.GroupLayout logoPanelLayout = new javax.swing.GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addGroup(logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourceLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copyrightLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        logoPanelLayout.setVerticalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copyrightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sourceLink))
            .addComponent(iconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
        );

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        helpButton.setText("Help");

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(helpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(helpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton))
        );

        pkmnViewPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pkmnViewPanelLayout = new javax.swing.GroupLayout(pkmnViewPanel);
        pkmnViewPanel.setLayout(pkmnViewPanelLayout);
        pkmnViewPanelLayout.setHorizontalGroup(
            pkmnViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pkmnViewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
        );
        pkmnViewPanelLayout.setVerticalGroup(
            pkmnViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pkmnViewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        commandPanel.setDividerLocation(397);
        commandPanel.setDividerSize(6);
        commandPanel.setResizeWeight(0.5);

        filterPanel.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        filterPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        typeFilterPanel.setLayout(new java.awt.BorderLayout());

        typeFiltersPanel.setLayout(new java.awt.GridLayout(5, 4));

        typeFilterGroup.add(normalFilterCheckBox);
        normalFilterCheckBox.setText("Normal");
        typeFiltersPanel.add(normalFilterCheckBox);

        typeFilterGroup.add(fireFilterCheckBox);
        fireFilterCheckBox.setText("Fire");
        typeFiltersPanel.add(fireFilterCheckBox);

        typeFilterGroup.add(groundFilterCheckBox);
        groundFilterCheckBox.setText("Ground");
        typeFiltersPanel.add(groundFilterCheckBox);

        typeFilterGroup.add(psychicFilterCheckBox);
        psychicFilterCheckBox.setText("Psychic");
        typeFiltersPanel.add(psychicFilterCheckBox);

        typeFilterGroup.add(fightingFilterCheckBox);
        fightingFilterCheckBox.setText("Fighting");
        typeFiltersPanel.add(fightingFilterCheckBox);

        typeFilterGroup.add(waterFilterCheckBox);
        waterFilterCheckBox.setText("Water");
        typeFiltersPanel.add(waterFilterCheckBox);

        typeFilterGroup.add(rockFilterCheckBox);
        rockFilterCheckBox.setText("Rock");
        typeFiltersPanel.add(rockFilterCheckBox);

        typeFilterGroup.add(iceFilterCheckBox);
        iceFilterCheckBox.setText("Ice");
        typeFiltersPanel.add(iceFilterCheckBox);

        typeFilterGroup.add(flyingFilterCheckBox);
        flyingFilterCheckBox.setText("Flying");
        typeFiltersPanel.add(flyingFilterCheckBox);

        typeFilterGroup.add(grassFilterCheckBox);
        grassFilterCheckBox.setText("Grass");
        typeFiltersPanel.add(grassFilterCheckBox);

        typeFilterGroup.add(bugFilterCheckBox);
        bugFilterCheckBox.setText("Bug");
        typeFiltersPanel.add(bugFilterCheckBox);

        typeFilterGroup.add(dragonFilterCheckBox);
        dragonFilterCheckBox.setText("Dragon");
        typeFiltersPanel.add(dragonFilterCheckBox);

        typeFilterGroup.add(poisonFilterCheckBox);
        poisonFilterCheckBox.setText("Poison");
        typeFiltersPanel.add(poisonFilterCheckBox);

        typeFilterGroup.add(electricFilterCheckBox);
        electricFilterCheckBox.setText("Electric");
        typeFiltersPanel.add(electricFilterCheckBox);

        typeFilterGroup.add(ghostFilterCheckBox);
        ghostFilterCheckBox.setText("Ghost");
        typeFiltersPanel.add(ghostFilterCheckBox);

        typeFilterGroup.add(darkFilterCheckBox);
        darkFilterCheckBox.setText("Dark");
        typeFiltersPanel.add(darkFilterCheckBox);

        typeFilterGroup.add(steelFilterCheckBox);
        steelFilterCheckBox.setText("Steel");
        typeFiltersPanel.add(steelFilterCheckBox);

        typeFilterGroup.add(fairyFilterCheckBox);
        fairyFilterCheckBox.setText("Fairy");
        typeFiltersPanel.add(fairyFilterCheckBox);

        allTypeFiltersButton.setText("All");
        allTypeFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allTypeFiltersButtonActionPerformed(evt);
            }
        });
        typeFiltersPanel.add(allTypeFiltersButton);

        noTypeFiltersButton.setText("None");
        noTypeFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noTypeFiltersButtonActionPerformed(evt);
            }
        });
        typeFiltersPanel.add(noTypeFiltersButton);

        typeFilterPanel.add(typeFiltersPanel, java.awt.BorderLayout.CENTER);

        typeSwitchesPanel.setLayout(new java.awt.GridLayout(1, 0));

        typeStrictMatchButton.setText("Strict Match");
        typeSwitchesPanel.add(typeStrictMatchButton);

        singleTypeOnlyButton.setText("Single-Type Only");
        singleTypeOnlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleTypeOnlyButtonActionPerformed(evt);
            }
        });
        typeSwitchesPanel.add(singleTypeOnlyButton);

        dualTypeOnlyButton.setText("Dual-Type Only");
        dualTypeOnlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dualTypeOnlyButtonActionPerformed(evt);
            }
        });
        typeSwitchesPanel.add(dualTypeOnlyButton);

        typeFilterPanel.add(typeSwitchesPanel, java.awt.BorderLayout.SOUTH);

        filterPanel.addTab("Type", typeFilterPanel);

        regionFilterPanel.setLayout(new java.awt.BorderLayout());

        regionFiltersPanel.setLayout(new java.awt.GridLayout(5, 4));

        regionFilterGroup.add(kantoRegionFilterCheckBox);
        kantoRegionFilterCheckBox.setText("Kanto");
        regionFiltersPanel.add(kantoRegionFilterCheckBox);

        regionFilterGroup.add(johtoRegionFilterCheckBox);
        johtoRegionFilterCheckBox.setText("Johto");
        regionFiltersPanel.add(johtoRegionFilterCheckBox);

        regionFilterGroup.add(hoennRegionFilterCheckBox);
        hoennRegionFilterCheckBox.setText("Hoenn");
        regionFiltersPanel.add(hoennRegionFilterCheckBox);

        regionFilterGroup.add(sinnohRegionFilterCheckBox);
        sinnohRegionFilterCheckBox.setText("Sinnoh");
        regionFiltersPanel.add(sinnohRegionFilterCheckBox);

        regionFilterGroup.add(unovaRegionFilterCheckBox);
        unovaRegionFilterCheckBox.setText("Unova");
        regionFiltersPanel.add(unovaRegionFilterCheckBox);

        regionFilterGroup.add(kalosRegionFilterCheckBox);
        kalosRegionFilterCheckBox.setText("Kalos");
        regionFiltersPanel.add(kalosRegionFilterCheckBox);
        regionFiltersPanel.add(jLabel1);
        regionFiltersPanel.add(jLabel3);
        regionFiltersPanel.add(jLabel4);
        regionFiltersPanel.add(jLabel5);
        regionFiltersPanel.add(jLabel6);
        regionFiltersPanel.add(jLabel7);
        regionFiltersPanel.add(jLabel8);
        regionFiltersPanel.add(jLabel9);
        regionFiltersPanel.add(jLabel10);
        regionFiltersPanel.add(jLabel11);
        regionFiltersPanel.add(jLabel12);
        regionFiltersPanel.add(jLabel13);

        allRegionFiltersButton.setText("All");
        allRegionFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allRegionFiltersButtonActionPerformed(evt);
            }
        });
        regionFiltersPanel.add(allRegionFiltersButton);

        noRegionFiltersButton.setText("None");
        noRegionFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noRegionFiltersButtonActionPerformed(evt);
            }
        });
        regionFiltersPanel.add(noRegionFiltersButton);

        regionFilterPanel.add(regionFiltersPanel, java.awt.BorderLayout.CENTER);

        regionButtonsPanel.setLayout(new java.awt.GridLayout(1, 0));

        regionStrictMatchButton.setText(" ");
        regionStrictMatchButton.setContentAreaFilled(false);
        regionButtonsPanel.add(regionStrictMatchButton);
        regionButtonsPanel.add(jLabel14);
        regionButtonsPanel.add(jLabel15);

        regionFilterPanel.add(regionButtonsPanel, java.awt.BorderLayout.SOUTH);

        filterPanel.addTab("Region", regionFilterPanel);

        collectionFilterPanel.setLayout(new java.awt.BorderLayout());

        collectionFiltersPanel.setLayout(new java.awt.GridLayout(5, 4));

        statusFilterGroup.add(caughtStatusFilterCheckBox);
        caughtStatusFilterCheckBox.setText("Caught");
        collectionFiltersPanel.add(caughtStatusFilterCheckBox);

        statusFilterGroup.add(wantStatusFilterCheckBox);
        wantStatusFilterCheckBox.setText("Want");
        collectionFiltersPanel.add(wantStatusFilterCheckBox);

        statusFilterGroup.add(seenStatusFilterCheckBox);
        seenStatusFilterCheckBox.setText("Seen");
        collectionFiltersPanel.add(seenStatusFilterCheckBox);

        statusFilterGroup.add(tradedStatusFilterCheckBox);
        tradedStatusFilterCheckBox.setText("Traded");
        collectionFiltersPanel.add(tradedStatusFilterCheckBox);

        statusFilterGroup.add(multipleStatusFilterCheckBox);
        multipleStatusFilterCheckBox.setText("Have multiple");
        collectionFiltersPanel.add(multipleStatusFilterCheckBox);
        collectionFiltersPanel.add(jLabel2);
        collectionFiltersPanel.add(jLabel16);
        collectionFiltersPanel.add(jLabel17);
        collectionFiltersPanel.add(jLabel18);
        collectionFiltersPanel.add(jLabel19);
        collectionFiltersPanel.add(jLabel20);
        collectionFiltersPanel.add(jLabel21);
        collectionFiltersPanel.add(jLabel22);
        collectionFiltersPanel.add(jLabel23);
        collectionFiltersPanel.add(jLabel24);
        collectionFiltersPanel.add(jLabel25);
        collectionFiltersPanel.add(jLabel26);
        collectionFiltersPanel.add(jLabel29);

        allStatusFiltersButton.setText("All");
        allStatusFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStatusFiltersButtonActionPerformed(evt);
            }
        });
        collectionFiltersPanel.add(allStatusFiltersButton);

        noStatusFiltersButton.setText("None");
        noStatusFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noStatusFiltersButtonActionPerformed(evt);
            }
        });
        collectionFiltersPanel.add(noStatusFiltersButton);

        collectionFilterPanel.add(collectionFiltersPanel, java.awt.BorderLayout.CENTER);

        collectionButtonsPanel.setLayout(new java.awt.GridLayout());

        regionStrictMatchButton1.setText(" ");
        regionStrictMatchButton1.setContentAreaFilled(false);
        collectionButtonsPanel.add(regionStrictMatchButton1);
        collectionButtonsPanel.add(jLabel27);
        collectionButtonsPanel.add(jLabel28);

        collectionFilterPanel.add(collectionButtonsPanel, java.awt.BorderLayout.SOUTH);

        filterPanel.addTab("Status", collectionFilterPanel);

        commandPanel.setLeftComponent(filterPanel);

        markSelectedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        markSelectedPanel.setLayout(new java.awt.BorderLayout());

        markSelectedsPanel.setLayout(new java.awt.GridLayout(5, 4));

        markSelectedGroup.add(markCaughtCheckBox);
        markCaughtCheckBox.setText("Caught");
        markSelectedsPanel.add(markCaughtCheckBox);

        markCaughtButton.setText("Mark");
        markSelectedsPanel.add(markCaughtButton);

        markSelectedGroup.add(markSeenCheckBox);
        markSeenCheckBox.setText("Seen");
        markSelectedsPanel.add(markSeenCheckBox);

        markSeenButton.setText("Mark");
        markSelectedsPanel.add(markSeenButton);

        markSelectedGroup.add(markWantCheckBox);
        markWantCheckBox.setText("Want");
        markSelectedsPanel.add(markWantCheckBox);

        markWantButton.setText("Mark");
        markSelectedsPanel.add(markWantButton);

        markSelectedGroup.add(markTradedCheckBox);
        markTradedCheckBox.setText("Traded");
        markSelectedsPanel.add(markTradedCheckBox);

        markTradedButton.setText("Mark");
        markSelectedsPanel.add(markTradedButton);
        markSelectedsPanel.add(markMultipleField);

        markMultipleButton.setText("Mark");
        markSelectedsPanel.add(markMultipleButton);
        markSelectedsPanel.add(jLabel30);
        markSelectedsPanel.add(jLabel31);
        markSelectedsPanel.add(jLabel32);
        markSelectedsPanel.add(jLabel38);
        markSelectedsPanel.add(jLabel37);
        markSelectedsPanel.add(jLabel36);
        markSelectedsPanel.add(jLabel35);
        markSelectedsPanel.add(jLabel34);

        clearMarkButton.setText("Clear");
        clearMarkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMarkButtonActionPerformed(evt);
            }
        });
        markSelectedsPanel.add(clearMarkButton);

        allMarkButton.setText("Apply All");
        markSelectedsPanel.add(allMarkButton);

        markSelectedPanel.add(markSelectedsPanel, java.awt.BorderLayout.CENTER);

        markSwitchesPanel.setLayout(new java.awt.GridLayout(1, 2));

        jButton8.setText(" ");
        jButton8.setContentAreaFilled(false);
        markSwitchesPanel.add(jButton8);

        markSelectedPanel.add(markSwitchesPanel, java.awt.BorderLayout.SOUTH);

        markSelectedPane.addTab("Mark selected as...", markSelectedPanel);

        commandPanel.setRightComponent(markSelectedPane);

        searchbynameLabel.setText("Search by name");

        viewSwitchLabel.setText("View by");

        viewByPanel.setLayout(new java.awt.GridLayout(1, 0));

        viewSwitchGroup.add(allPokemonRadio);
        allPokemonRadio.setSelected(true);
        allPokemonRadio.setText("All Pokemon");
        viewByPanel.add(allPokemonRadio);

        viewSwitchGroup.add(evolutionFamilyRadio);
        evolutionFamilyRadio.setText("Evolution Family");
        viewByPanel.add(evolutionFamilyRadio);

        jLabel33.setText("Pokemon currently listed:");

        jLabel39.setText("###");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(searchbynameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchByNameField))
                    .addComponent(viewByPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewSwitchLabel)
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel39)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbynameLabel)
                    .addComponent(searchByNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewSwitchLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewByPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        pokemonListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePane.setViewportView(pokemonListTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pkmnViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(commandPanel)
            .addComponent(tablePane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pkmnViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allTypeFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allTypeFiltersButtonActionPerformed
        for (JCheckBox element : typeFilterCheckBoxes) {
            element.setSelected(true);
        }
    }//GEN-LAST:event_allTypeFiltersButtonActionPerformed

    private void noTypeFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noTypeFiltersButtonActionPerformed
        for (JCheckBox element : typeFilterCheckBoxes) {
            element.setSelected(false);
        }
    }//GEN-LAST:event_noTypeFiltersButtonActionPerformed

    private void singleTypeOnlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleTypeOnlyButtonActionPerformed
        dualTypeOnlyButton.setSelected(false);
    }//GEN-LAST:event_singleTypeOnlyButtonActionPerformed

    private void dualTypeOnlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dualTypeOnlyButtonActionPerformed
        singleTypeOnlyButton.setSelected(false);
    }//GEN-LAST:event_dualTypeOnlyButtonActionPerformed

    private void allRegionFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allRegionFiltersButtonActionPerformed
        for (JCheckBox element : regionFilterCheckBoxes) {
            element.setSelected(true);
        }
    }//GEN-LAST:event_allRegionFiltersButtonActionPerformed

    private void noRegionFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noRegionFiltersButtonActionPerformed
        for (JCheckBox element : regionFilterCheckBoxes) {
            element.setSelected(false);
        }
    }//GEN-LAST:event_noRegionFiltersButtonActionPerformed

    private void allStatusFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStatusFiltersButtonActionPerformed
        for (JCheckBox element : statusFilterCheckBoxes) {
            element.setSelected(true);
        }
    }//GEN-LAST:event_allStatusFiltersButtonActionPerformed

    private void noStatusFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noStatusFiltersButtonActionPerformed
        for (JCheckBox element : statusFilterCheckBoxes) {
            element.setSelected(false);
        }
    }//GEN-LAST:event_noStatusFiltersButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        System.out.println("Hi");
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearMarkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMarkButtonActionPerformed
        for (JCheckBox element : markSelectedCheckBoxes) {
            element.setSelected(false);
        }
    }//GEN-LAST:event_clearMarkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allMarkButton;
    private javax.swing.JRadioButton allPokemonRadio;
    private javax.swing.JButton allRegionFiltersButton;
    private javax.swing.JButton allStatusFiltersButton;
    private javax.swing.JButton allTypeFiltersButton;
    private javax.swing.JCheckBox bugFilterCheckBox;
    private javax.swing.JCheckBox caughtStatusFilterCheckBox;
    private javax.swing.JButton clearMarkButton;
    private javax.swing.JPanel collectionButtonsPanel;
    private javax.swing.JPanel collectionFilterPanel;
    private javax.swing.JPanel collectionFiltersPanel;
    private javax.swing.JSplitPane commandPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JCheckBox darkFilterCheckBox;
    private javax.swing.JCheckBox dragonFilterCheckBox;
    private javax.swing.JToggleButton dualTypeOnlyButton;
    private javax.swing.JCheckBox electricFilterCheckBox;
    private javax.swing.JRadioButton evolutionFamilyRadio;
    private javax.swing.JCheckBox fairyFilterCheckBox;
    private javax.swing.JCheckBox fightingFilterCheckBox;
    private javax.swing.JTabbedPane filterPanel;
    private javax.swing.JCheckBox fireFilterCheckBox;
    private javax.swing.JCheckBox flyingFilterCheckBox;
    private javax.swing.JCheckBox ghostFilterCheckBox;
    private javax.swing.JCheckBox grassFilterCheckBox;
    private javax.swing.JCheckBox groundFilterCheckBox;
    private javax.swing.JButton helpButton;
    private javax.swing.JCheckBox hoennRegionFilterCheckBox;
    private javax.swing.JCheckBox iceFilterCheckBox;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JCheckBox johtoRegionFilterCheckBox;
    private javax.swing.JCheckBox kalosRegionFilterCheckBox;
    private javax.swing.JCheckBox kantoRegionFilterCheckBox;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JButton markCaughtButton;
    private javax.swing.JCheckBox markCaughtCheckBox;
    private javax.swing.JButton markMultipleButton;
    private javax.swing.JTextField markMultipleField;
    private javax.swing.JButton markSeenButton;
    private javax.swing.JCheckBox markSeenCheckBox;
    private javax.swing.ButtonGroup markSelectedGroup;
    private javax.swing.JTabbedPane markSelectedPane;
    private javax.swing.JPanel markSelectedPanel;
    private javax.swing.JPanel markSelectedsPanel;
    private javax.swing.JPanel markSwitchesPanel;
    private javax.swing.JButton markTradedButton;
    private javax.swing.JCheckBox markTradedCheckBox;
    private javax.swing.JButton markWantButton;
    private javax.swing.JCheckBox markWantCheckBox;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JCheckBox multipleStatusFilterCheckBox;
    private javax.swing.JButton noRegionFiltersButton;
    private javax.swing.JButton noStatusFiltersButton;
    private javax.swing.JButton noTypeFiltersButton;
    private javax.swing.JCheckBox normalFilterCheckBox;
    private javax.swing.JLabel pkmnViewLabel;
    private javax.swing.JPanel pkmnViewPanel;
    private javax.swing.JCheckBox poisonFilterCheckBox;
    private javax.swing.JTable pokemonListTable;
    private javax.swing.JCheckBox psychicFilterCheckBox;
    private javax.swing.JPanel regionButtonsPanel;
    private javax.swing.ButtonGroup regionFilterGroup;
    private javax.swing.JPanel regionFilterPanel;
    private javax.swing.JPanel regionFiltersPanel;
    private javax.swing.JToggleButton regionStrictMatchButton;
    private javax.swing.JToggleButton regionStrictMatchButton1;
    private javax.swing.JCheckBox rockFilterCheckBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchByNameField;
    private javax.swing.JLabel searchbynameLabel;
    private javax.swing.JCheckBox seenStatusFilterCheckBox;
    private javax.swing.JToggleButton singleTypeOnlyButton;
    private javax.swing.JCheckBox sinnohRegionFilterCheckBox;
    private javax.swing.JLabel sourceLink;
    private javax.swing.ButtonGroup statusFilterGroup;
    private javax.swing.JCheckBox steelFilterCheckBox;
    private javax.swing.JScrollPane tablePane;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JCheckBox tradedStatusFilterCheckBox;
    private javax.swing.ButtonGroup typeFilterGroup;
    private javax.swing.JPanel typeFilterPanel;
    private javax.swing.JPanel typeFiltersPanel;
    private javax.swing.JToggleButton typeStrictMatchButton;
    private javax.swing.JPanel typeSwitchesPanel;
    private javax.swing.JCheckBox unovaRegionFilterCheckBox;
    private javax.swing.JPanel viewByPanel;
    private javax.swing.ButtonGroup viewSwitchGroup;
    private javax.swing.JLabel viewSwitchLabel;
    private javax.swing.JCheckBox wantStatusFilterCheckBox;
    private javax.swing.JCheckBox waterFilterCheckBox;
    // End of variables declaration//GEN-END:variables
}
